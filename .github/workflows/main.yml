name: Todo App Pipeline
on: push

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.0.0
      - name: Set up Python and install dependencies
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.8.10
      - run: |
          python -m venv todo-app-venv
          source todo-app-venv/bin/activate
          pip install -r requirements.txt
      - name: Cache
        uses: actions/cache@v3.3.2
        with:
          path: .
          key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

  test:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Restore cache
        uses: actions/cache@v3.3.2
        with:
          path: .
          key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
      - name: Run tests
        run: |
          source todo-app-venv/bin/activate
          python -m unittest test_app

  upload-artifact:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Restore cache
        uses: actions/cache@v3.3.2
        with:
          path: .
          key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t pawlakalan/todo-app-python-flask:latest .
          docker push pawlakalan/todo-app-python-flask:latest

  deploy:
    needs: [build, test, upload-artifact]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-22.04
    steps:
      - name: Restore cache
        uses: actions/cache@v3.3.2
        with:
          path: .
          key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
      - name: Deploy to Render
        run: |
          curl -X POST \
            -d "imgURL=docker.io%2Fpawlakalan%2Ftodo-app-python-flask%3Alatest" \
            "https://api.render.com/deploy/${{ secrets.RENDER_TOKEN }}"
